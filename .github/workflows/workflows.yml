name: Deploy-firstVM

on: [workflow_dispatch]
permissions:
  id-token: write
  contents: read

env:
    AZURE_RESOURCEGROUP_NAME: project4
    adminUsername: elgonusername
    adminPassword: OurPmmmw0rd1998
    securityType: Standard
    VmName: VM-AD1
    vmSize: Standard_D2s_v5
    ENVIRONMENT_TYPE: Test
    
    

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run Bicep linter
      run: az bicep build --file deploy/main.bicep
  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - uses: azure/arm-deploy@v1
      name: Run preflight validation
      with:
        resourceGroupName: ${{ env.AZURE_RESOURCEGROUP_NAME }}
        template: ./deploy/main.bicep
        deploymentMode: Validate
        parameters:
          adminUsername=${{ env.adminUsername }}
          adminPassword=${{ env.adminPassword }}
          securityType=${{env.securityType}}
          vmName=${{env.VmName}}
          vmSize=${{env.vmSize}}

  preview:
            runs-on: ubuntu-latest
            needs: [lint, validate]
            steps:
            - uses: actions/checkout@v3
            - uses: azure/login@v1
              name: Sign in to Azure
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            - uses: azure/arm-deploy@v1
              name: Run what-if
              with:
                failOnStdErr: false
                resourceGroupName: ${{ env.AZURE_RESOURCEGROUP_NAME }}
                template: deploy/main.bicep
                parameters: >
                  adminUsername=${{ env.adminUsername }}
                  adminPassword=${{ env.adminPassword }}
                  securityType=${{env.securityType}}
                  vmName=${{env.VmName}}
                  vmSize=${{env.vmSize}}
                additionalArguments: --what-if
  deploy:
    runs-on: ubuntu-latest
    environment: Prod
    needs: preview
    outputs:
      appServiceAppHostName: ${{ steps.deploy.outputs.appServiceAppHostName }}
    steps:
    - uses: actions/checkout@v3
    - uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - uses: azure/arm-deploy@v1
      id: deploy
      name: Deploy VM
      with:
        deploymentName: ${{ github.run_number }}
        resourceGroupName: ${{ env.AZURE_RESOURCEGROUP_NAME }}
        template: ./deploy/main.bicep
        parameters:
          adminUsername=${{ env.adminUsername }}
          adminPassword=${{ env.adminPassword }}
          securityType=${{env.securityType}}
          vmName=${{env.VmName}}
          vmSize=${{env.vmSize}}

  smoke-test:
            runs-on: ubuntu-latest
            needs: deploy
            steps:
              
                - name: Checkout repository
                  uses: actions/checkout@v3
          
                - name: Set VM name
                  run: |
                    # Replace 'myVM' with the actual name of your VM
                    vm_name=${{env.VmName}}
          
                - name: Smoke test
                  run: |
                    # Install PowerShell
                    sudo apt-get update
                    sudo apt-get install -y powershell
          
                    # Run the smoke test script
                    pwsh -ExecutionPolicy Bypass -File smoke_test.ps1